{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/marioncasters/Sites/GIT/portfolio-next/pages/presentation.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query ViewerQuery {\\n        viewer {\\n            id\\n            name\\n            status\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { withApollo } from '../apollo/client';\nimport gql from 'graphql-tag';\nimport Link from 'next/link';\nimport { useQuery } from '@apollo/react-hooks';\nimport Layout from \"../components/Layout\";\nvar ViewerQuery = gql(_templateObject());\n\nvar Presentation = function Presentation() {\n  var _useQuery = useQuery(ViewerQuery),\n      viewer = _useQuery.data.viewer;\n\n  if (viewer) {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"You're signed in as \", viewer.name, \" and you're \", viewer.status, \" goto\", ' ', __jsx(Link, {\n      href: \"/about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"static\")), ' ', \"page.\"));\n  }\n\n  return null;\n};\n\nexport default withApollo(Presentation);","map":{"version":3,"sources":["/Users/marioncasters/Sites/GIT/portfolio-next/pages/presentation.js"],"names":["withApollo","gql","Link","useQuery","Layout","ViewerQuery","Presentation","viewer","data","name","status"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,IAAMC,WAAW,GAAGJ,GAAH,mBAAjB;;AAUA,IAAMK,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,kBAGnBH,QAAQ,CAACE,WAAD,CAHW;AAAA,MAEXE,MAFW,aAEnBC,IAFmB,CAEXD,MAFW;;AAKvB,MAAIA,MAAJ,EAAY;AACR,WACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACyBA,MAAM,CAACE,IADhC,kBACkDF,MAAM,CAACG,MADzD,WACsE,GADtE,EAEI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAFJ,EAIY,GAJZ,UADA,CADJ;AAWH;;AAED,SAAO,IAAP;AACH,CApBD;;AAsBA,eAAeV,UAAU,CAACM,YAAD,CAAzB","sourcesContent":["import { withApollo } from '../apollo/client'\nimport gql from 'graphql-tag'\nimport Link from 'next/link'\nimport { useQuery } from '@apollo/react-hooks'\nimport Layout from \"../components/Layout\";\n\nconst ViewerQuery = gql`\n    query ViewerQuery {\n        viewer {\n            id\n            name\n            status\n        }\n    }\n`\n\nconst Presentation = () => {\n    const {\n        data: { viewer },\n    } = useQuery(ViewerQuery)\n\n    if (viewer) {\n        return (\n            <Layout>\n            <div>\n                You're signed in as {viewer.name} and you're {viewer.status} goto{' '}\n                <Link href=\"/about\">\n                    <a>static</a>\n                </Link>{' '}\n                page.\n            </div>\n            </Layout>\n        )\n    }\n\n    return null\n}\n\nexport default withApollo(Presentation)"]},"metadata":{},"sourceType":"module"}