{"ast":null,"code":"var _jsxFileName = \"/Users/marioncasters/Sites/GIT/portfolio-next/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  className: \"jsx-1913471759\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \"Batman TV Shows\"), __jsx(\"ul\", {\n  className: \"jsx-1913471759\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, props.shows.map(show => __jsx(\"li\", {\n  key: show.id,\n  className: \"jsx-1913471759\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${show.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, __jsx(\"a\", {\n  className: \"jsx-1913471759\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, show.name))))), __jsx(_JSXStyle, {\n  id: \"1913471759\",\n  __self: this\n}, \"h1.jsx-1913471759,a.jsx-1913471759{font-family:'Arial';}ul.jsx-1913471759{padding:0;}li.jsx-1913471759{list-style:none;margin:5px 0;}a.jsx-1913471759{-webkit-text-decoration:none;text-decoration:none;color:red;}a.jsx-1913471759:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJpb25jYXN0ZXJzL1NpdGVzL0dJVC9wb3J0Zm9saW8tbmV4dC9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnQm9CLEFBSStCLEFBSVYsQUFJSSxBQUtLLEFBS1QsVUFiWixFQWNGLElBVmUsSUFSYixTQVNGLHFCQUlZLFVBQ1oiLCJmaWxlIjoiL1VzZXJzL21hcmlvbmNhc3RlcnMvU2l0ZXMvR0lUL3BvcnRmb2xpby1uZXh0L3BhZ2VzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL0xheW91dCc7XG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XG5cbmNvbnN0IEluZGV4ID0gcHJvcHMgPT4gKFxuICAgIDxMYXlvdXQ+XG4gICAgICAgIDxoMT5CYXRtYW4gVFYgU2hvd3M8L2gxPlxuICAgICAgICA8dWw+XG4gICAgICAgICAgICB7cHJvcHMuc2hvd3MubWFwKHNob3cgPT4gKFxuICAgICAgICAgICAgICAgIDxsaSBrZXk9e3Nob3cuaWR9PlxuICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3AvW2lkXVwiIGFzPXtgL3AvJHtzaG93LmlkfWB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGE+e3Nob3cubmFtZX08L2E+XG4gICAgICAgICAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgKSl9XG4gICAgICAgIDwvdWw+XG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgaDEsXG4gICAgICAgIGEge1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiAnQXJpYWwnO1xuICAgICAgICB9XG4gICAgICBcbiAgICAgICAgdWwge1xuICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGxpIHtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgbWFyZ2luOiA1cHggMDtcbiAgICAgIH0gICBcblxuICAgICAgYSB7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgY29sb3I6IHJlZDtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgYTpob3ZlciB7XG4gICAgICAgIG9wYWNpdHk6IDAuNjtcbiAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L0xheW91dD5cbik7XG5cbkluZGV4LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uKCkge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL2FwaS50dm1hemUuY29tL3NlYXJjaC9zaG93cz9xPWJhdG1hbicpO1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuXG4gICAgY29uc29sZS5sb2coYFNob3cgZGF0YSBmZXRjaGVkLiBDb3VudDogJHtkYXRhLmxlbmd0aH1gKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIHNob3dzOiBkYXRhLm1hcChlbnRyeSA9PiBlbnRyeS5zaG93KVxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBJbmRleDsiXX0= */\\n/*@ sourceURL=/Users/marioncasters/Sites/GIT/portfolio-next/pages/index.js */\"));\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/marioncasters/Sites/GIT/portfolio-next/pages/index.js"],"names":["Layout","Link","fetch","Index","props","shows","map","show","id","name","getInitialProps","res","data","json","console","log","length","entry"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IACf,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACjB;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKD,IAAI,CAACC,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,IAAI,CAACE,IAAT,CADJ,CADJ,CADH,CADL,CAFJ;AAAA;AAAA;AAAA,k0EADJ;;AAuCAN,KAAK,CAACO,eAAN,GAAwB,kBAAiB;AACrC,QAAMC,GAAG,GAAG,MAAMT,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMU,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACI,MAAO,EAArD;AAEA,SAAO;AACHX,IAAAA,KAAK,EAAEO,IAAI,CAACN,GAAL,CAASW,KAAK,IAAIA,KAAK,CAACV,IAAxB;AADJ,GAAP;AAGH,CATD;;AAWA,eAAeJ,KAAf","sourcesContent":["import Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => (\n    <Layout>\n        <h1>Batman TV Shows</h1>\n        <ul>\n            {props.shows.map(show => (\n                <li key={show.id}>\n                    <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n                        <a>{show.name}</a>\n                    </Link>\n                </li>\n            ))}\n        </ul>\n        <style jsx>{`\n        h1,\n        a {\n          font-family: 'Arial';\n        }\n      \n        ul {\n          padding: 0;\n        }\n        \n        li {\n        list-style: none;\n        margin: 5px 0;\n      }   \n\n      a {\n        text-decoration: none;\n        color: red;\n      }\n      \n      a:hover {\n        opacity: 0.6;\n      }\n      `}</style>\n    </Layout>\n);\n\nIndex.getInitialProps = async function() {\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n    const data = await res.json();\n\n    console.log(`Show data fetched. Count: ${data.length}`);\n\n    return {\n        shows: data.map(entry => entry.show)\n    };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}